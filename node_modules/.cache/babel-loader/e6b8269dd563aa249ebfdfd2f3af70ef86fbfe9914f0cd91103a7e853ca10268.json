{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"../App.css\";import SweetAlert2 from\"react-sweetalert2\";import Features from\"./Features\";import{useAuth}from\"../contexts/AuthContext\";import{useApiService}from\"../services/apiService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function FileConversion(props){const apiService=useApiService();const fileType=props.fileType;const[swalProps,setSwalProps]=useState({});const[conversionData,setConversionData]=useState([]);const[supportedConversions,setSupportedConversions]=useState({});const{token}=useAuth();const fetchedRef=useRef(false);const conversionStatus={ready:{badgeColor:\"info\",badgeText:\"ready\"},processing:{badgeColor:\"primary\",badgeText:\"processing\"},completed:{badgeColor:\"success\",badgeText:\"completed\"},failed:{badgeColor:\"danger\",badgeText:\"failed\"}};useEffect(()=>{const fetchSupportedMimetypes=async()=>{if(fetchedRef.current||!token)return;fetchedRef.current=true;try{const data=await apiService.fetchSupportedMimetypes();setSupportedConversions(data.supported_conversions);}catch(error){console.error(\"Fetch error:\",error);}};fetchSupportedMimetypes();},[]);const handleFileUpload=event=>{const files=event.target.files;const fileObjects=[...files].map(file=>({file:file,status:\"ready\"}));setConversionData([...conversionData,...fileObjects]);};const selectSupportedConversion=event=>{console.log(\"event: \",event);const conversionIndex=event.target.id;const selectedConversion=event.target.value;const newConversionData=[...conversionData];newConversionData[conversionIndex]={...newConversionData[conversionIndex],targetMimetype:selectedConversion};setConversionData(newConversionData);};const validateConversion=()=>{const supportedConversionDropdowns=document.querySelectorAll(\".target-mimetypes\");let allDropdownsFilled=true;supportedConversionDropdowns.forEach(element=>{if(element.value===\"\"){allDropdownsFilled=false;return;// Stop iterating if any dropdown is not filled\n}});if(!allDropdownsFilled){alert(\"Please fill in all dropdowns before conversion.\");}return allDropdownsFilled;};const handleConversionRequest=async(conversion,conversionIndex)=>{try{var _supportedConversions;const response=await apiService.convertFile(conversion.file,conversion.targetMimetype);if(!response.ok){throw new Error(\"Conversion failed\");}const blob=await response.blob();const contentType=response.headers.get(\"content-type\");const fileDownloadUrl=URL.createObjectURL(blob);const convertedFileName=\"converted_\".concat(conversionIndex,\".\").concat(((_supportedConversions=supportedConversions[contentType])===null||_supportedConversions===void 0?void 0:_supportedConversions.extension)||\"unknown\");return{fileDownloadUrl,convertedFileName};}catch(error){console.error(\"Conversion error:\",error);return{};}};const handleConversion=async()=>{const isValid=validateConversion();if(!isValid){return;}const conversions=[...conversionData];try{await Promise.all(conversions.map(async(conversion,index)=>{if(conversion.fileDownloadUrl){return;}conversion={...conversion,status:\"processing\"};// Use the functional state update form\nsetConversionData(prevConversions=>{const updatedConversions=[...prevConversions];updatedConversions[index]=conversion;return updatedConversions;});const{fileDownloadUrl,convertedFileName}=await handleConversionRequest(conversion,index);const updatedConversion={...conversion,fileDownloadUrl:fileDownloadUrl,convertedFileName:convertedFileName,status:fileDownloadUrl?\"completed\":\"failed\"};// Use the functional state update form\nsetConversionData(prevConversions=>{const updatedConversions=[...prevConversions];updatedConversions[index]=updatedConversion;return updatedConversions;});}));}catch(error){console.error(\"Error in one or more requests:\",error);}};const handleCancelConversion=index=>{const newConversionData=[...conversionData];newConversionData.splice(index,1);setConversionData(newConversionData);};const supportedConversionsOfUploadedFile=fileObject=>{const conversions=supportedConversions;const fileType=fileObject.file.type;const fileName=fileObject.file.name.split(\".\").pop();if(fileType&&conversions[fileType]){return fileType;}for(const key in conversions){if(key.toLowerCase().includes(fileName.toLowerCase())){return key;}}return\"\";};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content pb-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"content content-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column justify-content-sm-between text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-sm-fill font-size-h1 font-w700 text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-dark\",children:fileType?fileType:\"File\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-primary\",children:\" Converter\"})]}),/*#__PURE__*/_jsx(\"div\",{children:\"Convert your files to any format\"})]})}),conversionData.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"block block-rounded block-bordered\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"block-header block-header-default\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[fileType,\" Conversions\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"block-options\",children:/*#__PURE__*/_jsx(\"div\",{className:\"block-options-item\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-vcenter\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Supported Conversions\"}),/*#__PURE__*/_jsx(\"th\",{className:\"d-none d-sm-table-cell\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:conversionData.map((fileObject,index)=>{var _supportedConversions2,_supportedConversions3;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",scope:\"row\",children:index+1}),/*#__PURE__*/_jsxs(\"td\",{className:\"font-w600\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-image mr-2\"}),fileObject.file.name]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-control target-mimetypes\",id:index,style:{width:\"70%\"},onChange:selectSupportedConversion,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",required:true,children:\"Convert to format ...\"}),(_supportedConversions2=supportedConversions[supportedConversionsOfUploadedFile(fileObject)])===null||_supportedConversions2===void 0?void 0:(_supportedConversions3=_supportedConversions2.targetable_mimetypes)===null||_supportedConversions3===void 0?void 0:_supportedConversions3.map((target_mimetype,index)=>{var _supportedConversions4;return/*#__PURE__*/_jsx(\"option\",{value:target_mimetype,children:(_supportedConversions4=supportedConversions[target_mimetype])===null||_supportedConversions4===void 0?void 0:_supportedConversions4.extension},index);})]})}),/*#__PURE__*/_jsxs(\"td\",{className:\"d-none d-sm-table-cell\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-\".concat(conversionStatus[fileObject.status].badgeColor),children:fileObject.status}),fileObject.status===\"processing\"&&/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm text-primary ml-2\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Loading...\"})})]}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"reset\",className:\"btn btn-sm btn-danger mr-1\",onClick:()=>handleCancelConversion(index),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-times\"}),\" Delete\"]}),fileObject.fileDownloadUrl&&/*#__PURE__*/_jsxs(\"a\",{href:fileObject.fileDownloadUrl?fileObject.fileDownloadUrl:\"#\",className:\"btn btn-sm btn-success\",download:fileObject.convertedFileName?fileObject.convertedFileName:\"\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-download\"}),\" Download\"]})]})})]},index);})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row block-content block-content-full block-content-sm bg-body-light\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col text-left\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"upload-files\",className:\"btn btn-primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus mr-2\"}),\" Add more files\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"upload-files\",onChange:handleFileUpload,multiple:true,required:true,hidden:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col text-right\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"reset\",className:\"btn btn-danger mr-1\",onClick:()=>setConversionData([]),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-repeat\"}),\" Delete All\"]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn-primary\",onClick:handleConversion,children:[\"Convert All \",/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-arrow-right ml-1\"})]})]})]})]}),conversionData.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(\"div\",{id:\"upload-file-block\",className:\"block block-rounded\",children:/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"upload-file\",className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"id_original_file\",className:\"btn btn-hero-lg btn-hero-primary mb-3\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-upload mr-1\",\"aria-hidden\":\"true\"}),\"Upload File\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,name:\"original_file\",required:true,id:\"id_original_file\",onChange:handleFileUpload,hidden:true}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Upload your files here, 100MB maximum file size.\",/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-light\",onClick:()=>{setSwalProps({show:true,text:\"All your data is always protected and under your control.\",icon:\"info\"});},children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle text-primary\"})}),/*#__PURE__*/_jsx(SweetAlert2,{...swalProps,didClose:()=>{setSwalProps({});}})]})]})})})})]}),/*#__PURE__*/_jsx(Features,{})]});}export default FileConversion;","map":{"version":3,"names":["React","useState","useEffect","useRef","SweetAlert2","Features","useAuth","useApiService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileConversion","props","apiService","fileType","swalProps","setSwalProps","conversionData","setConversionData","supportedConversions","setSupportedConversions","token","fetchedRef","conversionStatus","ready","badgeColor","badgeText","processing","completed","failed","fetchSupportedMimetypes","current","data","supported_conversions","error","console","handleFileUpload","event","files","target","fileObjects","map","file","status","selectSupportedConversion","log","conversionIndex","id","selectedConversion","value","newConversionData","targetMimetype","validateConversion","supportedConversionDropdowns","document","querySelectorAll","allDropdownsFilled","forEach","element","alert","handleConversionRequest","conversion","_supportedConversions","response","convertFile","ok","Error","blob","contentType","headers","get","fileDownloadUrl","URL","createObjectURL","convertedFileName","concat","extension","handleConversion","isValid","conversions","Promise","all","index","prevConversions","updatedConversions","updatedConversion","handleCancelConversion","splice","supportedConversionsOfUploadedFile","fileObject","type","fileName","name","split","pop","key","toLowerCase","includes","children","className","length","_supportedConversions2","_supportedConversions3","scope","style","width","onChange","required","targetable_mimetypes","target_mimetype","_supportedConversions4","role","onClick","href","download","htmlFor","multiple","hidden","show","text","icon","didClose"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/components/FileConversion.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../App.css\";\nimport SweetAlert2 from \"react-sweetalert2\";\nimport Features from \"./Features\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useApiService } from \"../services/apiService\";\n\nfunction FileConversion(props) {\n  const apiService = useApiService();\n\n  const fileType = props.fileType;\n\n  const [swalProps, setSwalProps] = useState({});\n  const [conversionData, setConversionData] = useState([]);\n  const [supportedConversions, setSupportedConversions] = useState({});\n\n  const { token } = useAuth();\n  const fetchedRef = useRef(false);\n\n  const conversionStatus = {\n    ready: { badgeColor: \"info\", badgeText: \"ready\" },\n    processing: { badgeColor: \"primary\", badgeText: \"processing\" },\n    completed: { badgeColor: \"success\", badgeText: \"completed\" },\n    failed: { badgeColor: \"danger\", badgeText: \"failed\" },\n  };\n\n  useEffect(() => {\n    const fetchSupportedMimetypes = async () => {\n      if (fetchedRef.current || !token) return;\n      fetchedRef.current = true;\n\n      try {\n        const data = await apiService.fetchSupportedMimetypes();\n        setSupportedConversions(data.supported_conversions);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n\n    fetchSupportedMimetypes();\n  }, []);\n\n  const handleFileUpload = (event) => {\n    const files = event.target.files;\n    const fileObjects = [...files].map((file) => ({\n      file: file,\n      status: \"ready\",\n    }));\n    setConversionData([...conversionData, ...fileObjects]);\n  };\n\n  const selectSupportedConversion = (event) => {\n    console.log(\"event: \", event);\n    const conversionIndex = event.target.id;\n    const selectedConversion = event.target.value;\n\n    const newConversionData = [...conversionData];\n    newConversionData[conversionIndex] = {\n      ...newConversionData[conversionIndex],\n      targetMimetype: selectedConversion,\n    };\n\n    setConversionData(newConversionData);\n  };\n\n  const validateConversion = () => {\n    const supportedConversionDropdowns =\n      document.querySelectorAll(\".target-mimetypes\");\n    let allDropdownsFilled = true;\n\n    supportedConversionDropdowns.forEach((element) => {\n      if (element.value === \"\") {\n        allDropdownsFilled = false;\n        return; // Stop iterating if any dropdown is not filled\n      }\n    });\n\n    if (!allDropdownsFilled) {\n      alert(\"Please fill in all dropdowns before conversion.\");\n    }\n\n    return allDropdownsFilled;\n  };\n\n  const handleConversionRequest = async (conversion, conversionIndex) => {\n    try {\n      const response = await apiService.convertFile(\n        conversion.file,\n        conversion.targetMimetype\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Conversion failed\");\n      }\n\n      const blob = await response.blob();\n      const contentType = response.headers.get(\"content-type\");\n      const fileDownloadUrl = URL.createObjectURL(blob);\n      const convertedFileName = `converted_${conversionIndex}.${\n        supportedConversions[contentType]?.extension || \"unknown\"\n      }`;\n\n      return {\n        fileDownloadUrl,\n        convertedFileName,\n      };\n    } catch (error) {\n      console.error(\"Conversion error:\", error);\n      return {};\n    }\n  };\n\n  const handleConversion = async () => {\n    const isValid = validateConversion();\n\n    if (!isValid) {\n      return;\n    }\n\n    const conversions = [...conversionData];\n\n    try {\n      await Promise.all(\n        conversions.map(async (conversion, index) => {\n          if (conversion.fileDownloadUrl) {\n            return;\n          }\n\n          conversion = {\n            ...conversion,\n            status: \"processing\",\n          };\n\n          // Use the functional state update form\n          setConversionData((prevConversions) => {\n            const updatedConversions = [...prevConversions];\n            updatedConversions[index] = conversion;\n            return updatedConversions;\n          });\n\n          const { fileDownloadUrl, convertedFileName } =\n            await handleConversionRequest(conversion, index);\n\n          const updatedConversion = {\n            ...conversion,\n            fileDownloadUrl: fileDownloadUrl,\n            convertedFileName: convertedFileName,\n            status: fileDownloadUrl ? \"completed\" : \"failed\",\n          };\n\n          // Use the functional state update form\n          setConversionData((prevConversions) => {\n            const updatedConversions = [...prevConversions];\n            updatedConversions[index] = updatedConversion;\n            return updatedConversions;\n          });\n        })\n      );\n    } catch (error) {\n      console.error(\"Error in one or more requests:\", error);\n    }\n  };\n\n  const handleCancelConversion = (index) => {\n    const newConversionData = [...conversionData];\n    newConversionData.splice(index, 1);\n    setConversionData(newConversionData);\n  };\n\n  const supportedConversionsOfUploadedFile = (fileObject) => {\n    const conversions = supportedConversions;\n    const fileType = fileObject.file.type;\n    const fileName = fileObject.file.name.split(\".\").pop();\n\n    if (fileType && conversions[fileType]) {\n      return fileType;\n    }\n\n    for (const key in conversions) {\n      if (key.toLowerCase().includes(fileName.toLowerCase())) {\n        return key;\n      }\n    }\n\n    return \"\";\n  };\n\n  return (\n    <>\n      <div className=\"content pb-5\">\n        <div className=\"content content-full\">\n          <div className=\"d-flex flex-column justify-content-sm-between text-center\">\n            <div className=\"flex-sm-fill font-size-h1 font-w700 text-center\">\n              <span className=\"text-dark\">{fileType ? fileType : \"File\"}</span>\n              <span className=\"text-primary\"> Converter</span>\n            </div>\n            <div>Convert your files to any format</div>\n          </div>\n        </div>\n\n        {conversionData.length > 0 && (\n          <div className=\"block block-rounded block-bordered\">\n            <div className=\"block-header block-header-default\">\n              <h3 className=\"block-title\">{fileType} Conversions</h3>\n              <div className=\"block-options\">\n                <div className=\"block-options-item\">\n                  {/* <code>.table</code> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"block-content\">\n              <table className=\"table table-vcenter\">\n                <thead>\n                  <tr>\n                    <th className=\"text-center\">#</th>\n                    <th>Name</th>\n                    <th>Supported Conversions</th>\n                    <th className=\"d-none d-sm-table-cell\">Status</th>\n                    <th className=\"text-center\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {conversionData.map((fileObject, index) => (\n                    <tr key={index}>\n                      <td className=\"text-center\" scope=\"row\">\n                        {index + 1}\n                      </td>\n                      <td className=\"font-w600\">\n                        <i className=\"fa fa-image mr-2\"></i>\n                        {fileObject.file.name}\n                      </td>\n                      <td>\n                        <select\n                          className=\"form-control target-mimetypes\"\n                          id={index}\n                          style={{ width: \"70%\" }}\n                          onChange={selectSupportedConversion}\n                        >\n                          <option value=\"\" required>\n                            Convert to format ...\n                          </option>\n                          {supportedConversions[\n                            supportedConversionsOfUploadedFile(fileObject)\n                          ]?.targetable_mimetypes?.map(\n                            (target_mimetype, index) => (\n                              <option key={index} value={target_mimetype}>\n                                {\n                                  supportedConversions[target_mimetype]\n                                    ?.extension\n                                }\n                              </option>\n                            )\n                          )}\n                        </select>\n                      </td>\n                      <td className=\"d-none d-sm-table-cell\">\n                        <span\n                          className={`badge badge-${\n                            conversionStatus[fileObject.status].badgeColor\n                          }`}\n                        >\n                          {fileObject.status}\n                        </span>\n                        {fileObject.status === \"processing\" && (\n                          <span\n                            className=\"spinner-border spinner-border-sm text-primary ml-2\"\n                            role=\"status\"\n                          >\n                            <span className=\"sr-only\">Loading...</span>\n                          </span>\n                        )}\n                      </td>\n                      <td className=\"text-center\">\n                        <div className=\"btn-group\">\n                          <button\n                            type=\"reset\"\n                            className=\"btn btn-sm btn-danger mr-1\"\n                            onClick={() => handleCancelConversion(index)}\n                          >\n                            <i className=\"fa fa-fw fa-times\"></i> Delete\n                          </button>\n                          {fileObject.fileDownloadUrl && (\n                            <a\n                              href={\n                                fileObject.fileDownloadUrl\n                                  ? fileObject.fileDownloadUrl\n                                  : \"#\"\n                              }\n                              className=\"btn btn-sm btn-success\"\n                              download={\n                                fileObject.convertedFileName\n                                  ? fileObject.convertedFileName\n                                  : \"\"\n                              }\n                            >\n                              <i className=\"fa fa-fw fa-download\"></i> Download\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"row block-content block-content-full block-content-sm bg-body-light\">\n              <div className=\"col text-left\">\n                <label htmlFor=\"upload-files\" className=\"btn btn-primary\">\n                  <i className=\"fa fa-plus mr-2\"></i> Add more files\n                </label>\n                <input\n                  type=\"file\"\n                  id=\"upload-files\"\n                  onChange={handleFileUpload}\n                  multiple\n                  required\n                  hidden\n                />\n              </div>\n              <div className=\"col text-right\">\n                <button\n                  type=\"reset\"\n                  className=\"btn btn-danger mr-1\"\n                  onClick={() => setConversionData([])}\n                >\n                  <i className=\"fa fa-repeat\"></i> Delete All\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={handleConversion}\n                >\n                  Convert All <i className=\"fa fa-arrow-right ml-1\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {conversionData.length === 0 && (\n          <div className=\"d-flex justify-content-center\">\n            <div id=\"upload-file-block\" className=\"block block-rounded\">\n              <div className=\"block-content\">\n                <div id=\"upload-file\" className=\"text-center\">\n                  <label\n                    htmlFor=\"id_original_file\"\n                    className=\"btn btn-hero-lg btn-hero-primary mb-3\"\n                  >\n                    <i className=\"fa fa-upload mr-1\" aria-hidden=\"true\"></i>\n                    Upload File\n                  </label>\n                  <input\n                    type=\"file\"\n                    multiple\n                    name=\"original_file\"\n                    required\n                    id=\"id_original_file\"\n                    onChange={handleFileUpload}\n                    hidden\n                  />\n                  <p>\n                    Upload your files here, 100MB maximum file size.\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-light\"\n                      onClick={() => {\n                        setSwalProps({\n                          show: true,\n                          text: \"All your data is always protected and under your control.\",\n                          icon: \"info\",\n                        });\n                      }}\n                    >\n                      <i className=\"fa fa-info-circle text-primary\"></i>\n                    </button>\n                    <SweetAlert2\n                      {...swalProps}\n                      didClose={() => {\n                        setSwalProps({});\n                      }}\n                    />\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      <Features />\n    </>\n  );\n}\n\nexport default FileConversion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}