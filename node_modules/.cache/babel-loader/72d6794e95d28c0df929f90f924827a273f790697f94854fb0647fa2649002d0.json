{"ast":null,"code":"import{useAuth}from\"../contexts/AuthContext\";const API_BASE_URL=\"http://localhost:8000\";class ApiService{constructor(){this.baseUrl=API_BASE_URL;}getToken(){// This method will be overwritten with the actual token getter\nreturn null;}async fetchWithAuth(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=this.getToken();const headers={Authorization:\"Token \".concat(token===null||token===void 0?void 0:token.key),...options.headers};return this.fetchBase(endpoint,{...options,headers});}async fetchWithoutAuth(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return this.fetchBase(endpoint,options);}async fetchBase(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await fetch(\"\".concat(this.baseUrl).concat(endpoint),options);return this.handleResponse(response);}catch(error){throw new Error(\"Network error or server unreachable\");}}async handleResponse(response){const contentType=response.headers.get(\"content-type\");if(contentType&&contentType.includes(\"application/json\")){const data=await response.json();if(!response.ok){throw new Error(data.error||\"HTTP error! Status: \".concat(response.status));}return data;}else{if(!response.ok){throw new Error(\"HTTP error! Status: \".concat(response.status));}return response;}}async getWithAuth(endpoint){return this.fetchWithAuth(endpoint,{method:\"GET\"});}async postWithAuth(endpoint,data){return this.fetchWithAuth(endpoint,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});}async postWithoutAuth(endpoint,data){return this.fetchWithoutAuth(endpoint,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});}async deleteWithAuth(endpoint){return this.fetchWithAuth(endpoint,{method:\"DELETE\"});}async postFormDataWithAuth(endpoint,formData){return this.fetchWithAuth(endpoint,{method:\"POST\",body:formData});}async postFormDataWithoutAuth(endpoint,formData){return this.fetchWithoutAuth(endpoint,{method:\"POST\",body:formData});}// Specific API methods\nasync fetchSupportedMimetypes(){return this.getWithAuth(\"/target_conversions/\");}async convertFile(file,targetMimetype){const formData=new FormData();formData.append(\"original_file\",file);formData.append(\"converted_mimetype\",targetMimetype);return this.postFormDataWithAuth(\"/\",formData);}async resetPassword(passwordResetToken,newPassword,confirmPassword){const formData={token:passwordResetToken,password:newPassword,confirm_password:confirmPassword};return this.postWithoutAuth(\"/api/user/reset_password/\",formData);}async updateUserProfile(userData){return this.postWithAuth(\"/api/user/profile\",userData);}async deleteAccount(){return this.deleteWithAuth(\"/api/user/delete_account\");}async submitHelpRequest(formData){return this.postWithoutAuth(\"/send_help_request/\",formData);}}export const apiService=new ApiService();export const useApiService=()=>{const{token}=useAuth();apiService.getToken=()=>token;return apiService;};","map":{"version":3,"names":["useAuth","API_BASE_URL","ApiService","constructor","baseUrl","getToken","fetchWithAuth","endpoint","options","arguments","length","undefined","token","headers","Authorization","concat","key","fetchBase","fetchWithoutAuth","response","fetch","handleResponse","error","Error","contentType","get","includes","data","json","ok","status","getWithAuth","method","postWithAuth","body","JSON","stringify","postWithoutAuth","deleteWithAuth","postFormDataWithAuth","formData","postFormDataWithoutAuth","fetchSupportedMimetypes","convertFile","file","targetMimetype","FormData","append","resetPassword","passwordResetToken","newPassword","confirmPassword","password","confirm_password","updateUserProfile","userData","deleteAccount","submitHelpRequest","apiService","useApiService"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/services/apiService.js"],"sourcesContent":["import { useAuth } from \"../contexts/AuthContext\";\n\nconst API_BASE_URL = \"http://localhost:8000\";\n\nclass ApiService {\n  constructor() {\n    this.baseUrl = API_BASE_URL;\n  }\n\n  getToken() {\n    // This method will be overwritten with the actual token getter\n    return null;\n  }\n\n  async fetchWithAuth(endpoint, options = {}) {\n    const token = this.getToken();\n    const headers = {\n      Authorization: `Token ${token?.key}`,\n      ...options.headers,\n    };\n    return this.fetchBase(endpoint, { ...options, headers });\n  }\n\n  async fetchWithoutAuth(endpoint, options = {}) {\n    return this.fetchBase(endpoint, options);\n  }\n\n  async fetchBase(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${this.baseUrl}${endpoint}`, options);\n      return this.handleResponse(response);\n    } catch (error) {\n      throw new Error(\"Network error or server unreachable\");\n    }\n  }\n\n  async handleResponse(response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/json\")) {\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || `HTTP error! Status: ${response.status}`);\n      }\n      return data;\n    } else {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response;\n    }\n  }\n\n  async getWithAuth(endpoint) {\n    return this.fetchWithAuth(endpoint, { method: \"GET\" });\n  }\n\n  async postWithAuth(endpoint, data) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n\n  async postWithoutAuth(endpoint, data) {\n    return this.fetchWithoutAuth(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n\n  async deleteWithAuth(endpoint) {\n    return this.fetchWithAuth(endpoint, { method: \"DELETE\" });\n  }\n\n  async postFormDataWithAuth(endpoint, formData) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      body: formData,\n    });\n  }\n\n  async postFormDataWithoutAuth(endpoint, formData) {\n    return this.fetchWithoutAuth(endpoint, {\n      method: \"POST\",\n      body: formData,\n    });\n  }\n\n  // Specific API methods\n  async fetchSupportedMimetypes() {\n    return this.getWithAuth(\"/target_conversions/\");\n  }\n\n  async convertFile(file, targetMimetype) {\n    const formData = new FormData();\n    formData.append(\"original_file\", file);\n    formData.append(\"converted_mimetype\", targetMimetype);\n    return this.postFormDataWithAuth(\"/\", formData);\n  }\n\n  async resetPassword(passwordResetToken, newPassword, confirmPassword) {\n    const formData = {\n      token: passwordResetToken,\n      password: newPassword,\n      confirm_password: confirmPassword,\n    };\n    return this.postWithoutAuth(\"/api/user/reset_password/\", formData);\n  }\n\n  async updateUserProfile(userData) {\n    return this.postWithAuth(\"/api/user/profile\", userData);\n  }\n\n  async deleteAccount() {\n    return this.deleteWithAuth(\"/api/user/delete_account\");\n  }\n\n  async submitHelpRequest(formData) {\n    return this.postWithoutAuth(\"/send_help_request/\", formData);\n  }\n}\n\nexport const apiService = new ApiService();\n\nexport const useApiService = () => {\n  const { token } = useAuth();\n  apiService.getToken = () => token;\n  return apiService;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}