{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => {},\n  token: null,\n  setToken: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"authToken\");\n    if (storedToken) {\n      setToken(storedToken);\n      // fetchUserData(storedToken); // Fetch user data based on token here.\n    }\n  }, []);\n\n  // const fetchUserData = async (authToken) => {\n  //   debugger;\n  //   try {\n  //     const response = await axios.get(\"/api/user\", {\n  //       headers: { Authorization: `Bearer ${authToken}` },\n  //     });\n  //     setCurrentUser(response.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching user data:\", error);\n  //     // logout();\n  //   }\n  // };\n\n  // return (\n  //   <AuthContext.Provider\n  //     value={{ currentUser, setCurrentUser, token, setToken }}\n  //   >\n  //     {children}\n  //   </AuthContext.Provider>\n  // );\n};\n_s(AuthProvider, \"mZkaLRhWkAosXRd9Jyfe4WbYarg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AuthContext","currentUser","setCurrentUser","token","setToken","AuthProvider","children","_s","storedToken","localStorage","getItem","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nexport const AuthContext = createContext({\n  currentUser: null,\n  setCurrentUser: () => {},\n  token: null,\n  setToken: () => {},\n});\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"authToken\");\n\n    if (storedToken) {\n      setToken(storedToken);\n      // fetchUserData(storedToken); // Fetch user data based on token here.\n    }\n  }, []);\n\n  // const fetchUserData = async (authToken) => {\n  //   debugger;\n  //   try {\n  //     const response = await axios.get(\"/api/user\", {\n  //       headers: { Authorization: `Bearer ${authToken}` },\n  //     });\n  //     setCurrentUser(response.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching user data:\", error);\n  //     // logout();\n  //   }\n  // };\n\n  // return (\n  //   <AuthContext.Provider\n  //     value={{ currentUser, setCurrentUser, token, setToken }}\n  //   >\n  //     {children}\n  //   </AuthContext.Provider>\n  // );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE7E,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EACvCK,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAErD,IAAIF,WAAW,EAAE;MACfJ,QAAQ,CAACI,WAAW,CAAC;MACrB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAACD,EAAA,CAjCWF,YAAY;AAAAM,EAAA,GAAZN,YAAY;AAmCzB,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMhB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACa,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}