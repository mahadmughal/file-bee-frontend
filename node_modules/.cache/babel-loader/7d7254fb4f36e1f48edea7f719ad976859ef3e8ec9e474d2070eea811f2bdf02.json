{"ast":null,"code":"var _s = $RefreshSig$();\n// api.js\nimport { useAuth } from \"../contexts/AuthContext\"; // Assuming you have an auth module to get the token\n\nconst API_BASE_URL = \"http://localhost:8000\";\nclass ApiService {\n  constructor() {\n    this.baseUrl = API_BASE_URL;\n  }\n  getToken() {\n    // This method will be overwritten with the actual token getter\n    return null;\n  }\n  async fetchWithAuth(endpoint, options = {}) {\n    const token = this.getToken();\n    const headers = {\n      Authorization: `Token ${token.key}`,\n      ...options.headers\n    };\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      ...options,\n      headers\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || `HTTP error! Status: ${response.status}`);\n    }\n    return response;\n  }\n  async get(endpoint) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"GET\"\n    });\n  }\n  async post(endpoint, data) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  async delete(endpoint) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"DELETE\"\n    });\n  }\n  async postFormData(endpoint, formData) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      body: formData\n    });\n  }\n\n  // Specific API methods\n  async fetchSupportedMimetypes() {\n    const response = await this.get(\"/target_conversions/\");\n    return response.json();\n  }\n  async convertFile(file, targetMimetype) {\n    const formData = new FormData();\n    formData.append(\"original_file\", file);\n    formData.append(\"converted_mimetype\", targetMimetype);\n    return this.postFormData(\"/\", formData);\n  }\n  async updateUserProfile(userData) {\n    return this.put(\"/api/user/profile\", userData);\n  }\n  async deleteAccount() {\n    return this.delete(\"/api/user/delete_account\");\n  }\n}\nexport const apiService = new ApiService();\nexport const useApiService = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n\n  // Inject the token getter into the API service\n  apiService.getToken = () => token;\n  return apiService;\n};\n_s(useApiService, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useAuth","API_BASE_URL","ApiService","constructor","baseUrl","getToken","fetchWithAuth","endpoint","options","token","headers","Authorization","key","response","fetch","ok","error","json","Error","status","get","method","post","data","body","JSON","stringify","delete","postFormData","formData","fetchSupportedMimetypes","convertFile","file","targetMimetype","FormData","append","updateUserProfile","userData","put","deleteAccount","apiService","useApiService","_s"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/services/apiService.js"],"sourcesContent":["// api.js\nimport { useAuth } from \"../contexts/AuthContext\"; // Assuming you have an auth module to get the token\n\nconst API_BASE_URL = \"http://localhost:8000\";\n\nclass ApiService {\n  constructor() {\n    this.baseUrl = API_BASE_URL;\n  }\n\n  getToken() {\n    // This method will be overwritten with the actual token getter\n    return null;\n  }\n\n  async fetchWithAuth(endpoint, options = {}) {\n    const token = this.getToken();\n    const headers = {\n      Authorization: `Token ${token.key}`,\n      ...options.headers,\n    };\n\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      ...options,\n      headers,\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || `HTTP error! Status: ${response.status}`);\n    }\n\n    return response;\n  }\n\n  async get(endpoint) {\n    return this.fetchWithAuth(endpoint, { method: \"GET\" });\n  }\n\n  async post(endpoint, data) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n\n  async delete(endpoint) {\n    return this.fetchWithAuth(endpoint, { method: \"DELETE\" });\n  }\n\n  async postFormData(endpoint, formData) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      body: formData,\n    });\n  }\n\n  // Specific API methods\n  async fetchSupportedMimetypes() {\n    const response = await this.get(\"/target_conversions/\");\n    return response.json();\n  }\n\n  async convertFile(file, targetMimetype) {\n    const formData = new FormData();\n    formData.append(\"original_file\", file);\n    formData.append(\"converted_mimetype\", targetMimetype);\n    return this.postFormData(\"/\", formData);\n  }\n\n  async updateUserProfile(userData) {\n    return this.put(\"/api/user/profile\", userData);\n  }\n\n  async deleteAccount() {\n    return this.delete(\"/api/user/delete_account\");\n  }\n}\n\nexport const apiService = new ApiService();\n\nexport const useApiService = () => {\n  const { token } = useAuth();\n\n  // Inject the token getter into the API service\n  apiService.getToken = () => token;\n\n  return apiService;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}