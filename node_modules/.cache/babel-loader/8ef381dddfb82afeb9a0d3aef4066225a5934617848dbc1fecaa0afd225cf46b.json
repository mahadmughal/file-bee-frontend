{"ast":null,"code":"var _jsxFileName = \"/Users/mahadasif/Desktop/file_bee/frontend/src/components/FileConversion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../App.css\";\nimport SweetAlert2 from \"react-sweetalert2\";\nimport Features from \"./Features\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useApiService } from \"../services/apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileConversion(props) {\n  _s();\n  const apiService = useApiService();\n  const fileType = props.fileType;\n  const [swalProps, setSwalProps] = useState({});\n  const [conversionData, setConversionData] = useState([]);\n  const [supportedConversions, setSupportedConversions] = useState({});\n  const {\n    token\n  } = useAuth();\n  const fetchedRef = useRef(false);\n  const conversionStatus = {\n    ready: {\n      badgeColor: \"info\",\n      badgeText: \"ready\"\n    },\n    processing: {\n      badgeColor: \"primary\",\n      badgeText: \"processing\"\n    },\n    completed: {\n      badgeColor: \"success\",\n      badgeText: \"completed\"\n    },\n    failed: {\n      badgeColor: \"danger\",\n      badgeText: \"failed\"\n    }\n  };\n  useEffect(() => {\n    const fetchSupportedMimetypes = async () => {\n      if (fetchedRef.current || !token) return;\n      fetchedRef.current = true;\n      try {\n        const data = await apiService.fetchSupportedMimetypes();\n        setSupportedConversions(data.supported_conversions);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n    fetchSupportedMimetypes();\n  }, []);\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    const fileObjects = [...files].map(file => ({\n      file: file,\n      status: \"ready\"\n    }));\n    setConversionData([...conversionData, ...fileObjects]);\n  };\n  const selectSupportedConversion = event => {\n    console.log(\"event: \", event);\n    const conversionIndex = event.target.id;\n    const selectedConversion = event.target.value;\n    const newConversionData = [...conversionData];\n    newConversionData[conversionIndex] = {\n      ...newConversionData[conversionIndex],\n      targetMimetype: selectedConversion\n    };\n    setConversionData(newConversionData);\n  };\n  const validateConversion = () => {\n    const supportedConversionDropdowns = document.querySelectorAll(\".target-mimetypes\");\n    let allDropdownsFilled = true;\n    supportedConversionDropdowns.forEach(element => {\n      if (element.value === \"\") {\n        allDropdownsFilled = false;\n        return; // Stop iterating if any dropdown is not filled\n      }\n    });\n    if (!allDropdownsFilled) {\n      alert(\"Please fill in all dropdowns before conversion.\");\n    }\n    return allDropdownsFilled;\n  };\n  const handleConversionRequest = async (conversion, conversionIndex) => {\n    try {\n      const response = await apiService.convertFile(conversion.file, conversion.targetMimetype);\n      const {\n        url,\n        file_name\n      } = response.converted_file;\n      return {\n        fileDownloadUrl: url,\n        convertedFileName: file_name\n      };\n    } catch (error) {\n      console.error(\"Conversion error:\", error);\n      return {};\n    }\n  };\n  const handleConversion = async () => {\n    const isValid = validateConversion();\n    if (!isValid) {\n      return;\n    }\n    const conversions = [...conversionData];\n    try {\n      await Promise.all(conversions.map(async (conversion, index) => {\n        if (conversion.fileDownloadUrl) {\n          return;\n        }\n        conversion = {\n          ...conversion,\n          status: \"processing\"\n        };\n\n        // Use the functional state update form\n        setConversionData(prevConversions => {\n          const updatedConversions = [...prevConversions];\n          updatedConversions[index] = conversion;\n          return updatedConversions;\n        });\n        const {\n          fileDownloadUrl,\n          convertedFileName\n        } = await handleConversionRequest(conversion, index);\n        const updatedConversion = {\n          ...conversion,\n          fileDownloadUrl: fileDownloadUrl,\n          convertedFileName: convertedFileName,\n          status: fileDownloadUrl ? \"completed\" : \"failed\"\n        };\n\n        // Use the functional state update form\n        setConversionData(prevConversions => {\n          const updatedConversions = [...prevConversions];\n          updatedConversions[index] = updatedConversion;\n          return updatedConversions;\n        });\n      }));\n    } catch (error) {\n      console.error(\"Error in one or more requests:\", error);\n    }\n  };\n  const handleCancelConversion = index => {\n    const newConversionData = [...conversionData];\n    newConversionData.splice(index, 1);\n    setConversionData(newConversionData);\n  };\n  const supportedConversionsOfUploadedFile = fileObject => {\n    const conversions = supportedConversions;\n    const fileType = fileObject.file.type;\n    const fileName = fileObject.file.name.split(\".\").pop();\n    if (fileType && conversions[fileType]) {\n      return fileType;\n    }\n    for (const key in conversions) {\n      if (key.toLowerCase().includes(fileName.toLowerCase())) {\n        return key;\n      }\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content pb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content content-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column justify-content-sm-between text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-sm-fill font-size-h1 font-w700 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-dark\",\n              children: fileType ? fileType : \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-primary\",\n              children: \" Converter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Convert your files to any format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), conversionData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-rounded block-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-header block-header-default\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"block-title\",\n            children: [fileType, \" Conversions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-options\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-options-item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-vcenter\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"text-center\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Supported Conversions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"d-none d-sm-table-cell\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"text-center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: conversionData.map((fileObject, index) => {\n                var _supportedConversions, _supportedConversions2;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-center\",\n                    scope: \"row\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"font-w600\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-image mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 25\n                    }, this), fileObject.file.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control target-mimetypes\",\n                      id: index,\n                      style: {\n                        width: \"70%\"\n                      },\n                      onChange: selectSupportedConversion,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        required: true,\n                        children: \"Convert to format ...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 27\n                      }, this), (_supportedConversions = supportedConversions[supportedConversionsOfUploadedFile(fileObject)]) === null || _supportedConversions === void 0 ? void 0 : (_supportedConversions2 = _supportedConversions.targetable_mimetypes) === null || _supportedConversions2 === void 0 ? void 0 : _supportedConversions2.map((target_mimetype, index) => {\n                        var _supportedConversions3;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: target_mimetype,\n                          children: (_supportedConversions3 = supportedConversions[target_mimetype]) === null || _supportedConversions3 === void 0 ? void 0 : _supportedConversions3.extension\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 31\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"d-none d-sm-table-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge badge-${conversionStatus[fileObject.status].badgeColor}`,\n                      children: fileObject.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 25\n                    }, this), fileObject.status === \"processing\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"spinner-border spinner-border-sm text-primary ml-2\",\n                      role: \"status\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sr-only\",\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"btn-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"reset\",\n                        className: \"btn btn-sm btn-danger mr-1\",\n                        onClick: () => handleCancelConversion(index),\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-fw fa-times\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 29\n                        }, this), \" Delete\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 27\n                      }, this), fileObject.fileDownloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: fileObject.fileDownloadUrl ? fileObject.fileDownloadUrl : \"#\",\n                        className: \"btn btn-sm btn-success\",\n                        download: fileObject.convertedFileName ? fileObject.convertedFileName : \"\",\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-fw fa-download\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 31\n                        }, this), \" Download\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row block-content block-content-full block-content-sm bg-body-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"upload-files\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-plus mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), \" Add more files\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"upload-files\",\n              onChange: handleFileUpload,\n              multiple: true,\n              required: true,\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"btn btn-danger mr-1\",\n              onClick: () => setConversionData([]),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-repeat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), \" Delete All\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: handleConversion,\n              children: [\"Convert All \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-right ml-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), conversionData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"upload-file-block\",\n          className: \"block block-rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"upload-file\",\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"id_original_file\",\n                className: \"btn btn-hero-lg btn-hero-primary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-upload mr-1\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this), \"Upload File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                multiple: true,\n                name: \"original_file\",\n                required: true,\n                id: \"id_original_file\",\n                onChange: handleFileUpload,\n                hidden: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Upload your files here, 100MB maximum file size.\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-light\",\n                  onClick: () => {\n                    setSwalProps({\n                      show: true,\n                      text: \"All your data is always protected and under your control.\",\n                      icon: \"info\"\n                    });\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-info-circle text-primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SweetAlert2, {\n                  ...swalProps,\n                  didClose: () => {\n                    setSwalProps({});\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Features, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FileConversion, \"tI8/Ok7wwW3OL3VJMMeDY3CC0Rg=\", false, function () {\n  return [useApiService, useAuth];\n});\n_c = FileConversion;\nexport default FileConversion;\nvar _c;\n$RefreshReg$(_c, \"FileConversion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SweetAlert2","Features","useAuth","useApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","FileConversion","props","_s","apiService","fileType","swalProps","setSwalProps","conversionData","setConversionData","supportedConversions","setSupportedConversions","token","fetchedRef","conversionStatus","ready","badgeColor","badgeText","processing","completed","failed","fetchSupportedMimetypes","current","data","supported_conversions","error","console","handleFileUpload","event","files","target","fileObjects","map","file","status","selectSupportedConversion","log","conversionIndex","id","selectedConversion","value","newConversionData","targetMimetype","validateConversion","supportedConversionDropdowns","document","querySelectorAll","allDropdownsFilled","forEach","element","alert","handleConversionRequest","conversion","response","convertFile","url","file_name","converted_file","fileDownloadUrl","convertedFileName","handleConversion","isValid","conversions","Promise","all","index","prevConversions","updatedConversions","updatedConversion","handleCancelConversion","splice","supportedConversionsOfUploadedFile","fileObject","type","fileName","name","split","pop","key","toLowerCase","includes","children","className","_jsxFileName","lineNumber","columnNumber","length","_supportedConversions","_supportedConversions2","scope","style","width","onChange","required","targetable_mimetypes","target_mimetype","_supportedConversions3","extension","role","onClick","href","download","htmlFor","multiple","hidden","show","text","icon","didClose","_c","$RefreshReg$"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/components/FileConversion.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../App.css\";\nimport SweetAlert2 from \"react-sweetalert2\";\nimport Features from \"./Features\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useApiService } from \"../services/apiService\";\n\nfunction FileConversion(props) {\n  const apiService = useApiService();\n\n  const fileType = props.fileType;\n\n  const [swalProps, setSwalProps] = useState({});\n  const [conversionData, setConversionData] = useState([]);\n  const [supportedConversions, setSupportedConversions] = useState({});\n\n  const { token } = useAuth();\n  const fetchedRef = useRef(false);\n\n  const conversionStatus = {\n    ready: { badgeColor: \"info\", badgeText: \"ready\" },\n    processing: { badgeColor: \"primary\", badgeText: \"processing\" },\n    completed: { badgeColor: \"success\", badgeText: \"completed\" },\n    failed: { badgeColor: \"danger\", badgeText: \"failed\" },\n  };\n\n  useEffect(() => {\n    const fetchSupportedMimetypes = async () => {\n      if (fetchedRef.current || !token) return;\n      fetchedRef.current = true;\n\n      try {\n        const data = await apiService.fetchSupportedMimetypes();\n        setSupportedConversions(data.supported_conversions);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    };\n\n    fetchSupportedMimetypes();\n  }, []);\n\n  const handleFileUpload = (event) => {\n    const files = event.target.files;\n    const fileObjects = [...files].map((file) => ({\n      file: file,\n      status: \"ready\",\n    }));\n    setConversionData([...conversionData, ...fileObjects]);\n  };\n\n  const selectSupportedConversion = (event) => {\n    console.log(\"event: \", event);\n    const conversionIndex = event.target.id;\n    const selectedConversion = event.target.value;\n\n    const newConversionData = [...conversionData];\n    newConversionData[conversionIndex] = {\n      ...newConversionData[conversionIndex],\n      targetMimetype: selectedConversion,\n    };\n\n    setConversionData(newConversionData);\n  };\n\n  const validateConversion = () => {\n    const supportedConversionDropdowns =\n      document.querySelectorAll(\".target-mimetypes\");\n    let allDropdownsFilled = true;\n\n    supportedConversionDropdowns.forEach((element) => {\n      if (element.value === \"\") {\n        allDropdownsFilled = false;\n        return; // Stop iterating if any dropdown is not filled\n      }\n    });\n\n    if (!allDropdownsFilled) {\n      alert(\"Please fill in all dropdowns before conversion.\");\n    }\n\n    return allDropdownsFilled;\n  };\n\n  const handleConversionRequest = async (conversion, conversionIndex) => {\n    try {\n      const response = await apiService.convertFile(\n        conversion.file,\n        conversion.targetMimetype\n      );\n\n      const { url, file_name } = response.converted_file;\n\n      return {\n        fileDownloadUrl: url,\n        convertedFileName: file_name,\n      };\n    } catch (error) {\n      console.error(\"Conversion error:\", error);\n      return {};\n    }\n  };\n\n  const handleConversion = async () => {\n    const isValid = validateConversion();\n\n    if (!isValid) {\n      return;\n    }\n\n    const conversions = [...conversionData];\n\n    try {\n      await Promise.all(\n        conversions.map(async (conversion, index) => {\n          if (conversion.fileDownloadUrl) {\n            return;\n          }\n\n          conversion = {\n            ...conversion,\n            status: \"processing\",\n          };\n\n          // Use the functional state update form\n          setConversionData((prevConversions) => {\n            const updatedConversions = [...prevConversions];\n            updatedConversions[index] = conversion;\n            return updatedConversions;\n          });\n\n          const { fileDownloadUrl, convertedFileName } =\n            await handleConversionRequest(conversion, index);\n\n          const updatedConversion = {\n            ...conversion,\n            fileDownloadUrl: fileDownloadUrl,\n            convertedFileName: convertedFileName,\n            status: fileDownloadUrl ? \"completed\" : \"failed\",\n          };\n\n          // Use the functional state update form\n          setConversionData((prevConversions) => {\n            const updatedConversions = [...prevConversions];\n            updatedConversions[index] = updatedConversion;\n            return updatedConversions;\n          });\n        })\n      );\n    } catch (error) {\n      console.error(\"Error in one or more requests:\", error);\n    }\n  };\n\n  const handleCancelConversion = (index) => {\n    const newConversionData = [...conversionData];\n    newConversionData.splice(index, 1);\n    setConversionData(newConversionData);\n  };\n\n  const supportedConversionsOfUploadedFile = (fileObject) => {\n    const conversions = supportedConversions;\n    const fileType = fileObject.file.type;\n    const fileName = fileObject.file.name.split(\".\").pop();\n\n    if (fileType && conversions[fileType]) {\n      return fileType;\n    }\n\n    for (const key in conversions) {\n      if (key.toLowerCase().includes(fileName.toLowerCase())) {\n        return key;\n      }\n    }\n\n    return \"\";\n  };\n\n  return (\n    <>\n      <div className=\"content pb-5\">\n        <div className=\"content content-full\">\n          <div className=\"d-flex flex-column justify-content-sm-between text-center\">\n            <div className=\"flex-sm-fill font-size-h1 font-w700 text-center\">\n              <span className=\"text-dark\">{fileType ? fileType : \"File\"}</span>\n              <span className=\"text-primary\"> Converter</span>\n            </div>\n            <div>Convert your files to any format</div>\n          </div>\n        </div>\n\n        {conversionData.length > 0 && (\n          <div className=\"block block-rounded block-bordered\">\n            <div className=\"block-header block-header-default\">\n              <h3 className=\"block-title\">{fileType} Conversions</h3>\n              <div className=\"block-options\">\n                <div className=\"block-options-item\">\n                  {/* <code>.table</code> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"block-content\">\n              <table className=\"table table-vcenter\">\n                <thead>\n                  <tr>\n                    <th className=\"text-center\">#</th>\n                    <th>Name</th>\n                    <th>Supported Conversions</th>\n                    <th className=\"d-none d-sm-table-cell\">Status</th>\n                    <th className=\"text-center\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {conversionData.map((fileObject, index) => (\n                    <tr key={index}>\n                      <td className=\"text-center\" scope=\"row\">\n                        {index + 1}\n                      </td>\n                      <td className=\"font-w600\">\n                        <i className=\"fa fa-image mr-2\"></i>\n                        {fileObject.file.name}\n                      </td>\n                      <td>\n                        <select\n                          className=\"form-control target-mimetypes\"\n                          id={index}\n                          style={{ width: \"70%\" }}\n                          onChange={selectSupportedConversion}\n                        >\n                          <option value=\"\" required>\n                            Convert to format ...\n                          </option>\n                          {supportedConversions[\n                            supportedConversionsOfUploadedFile(fileObject)\n                          ]?.targetable_mimetypes?.map(\n                            (target_mimetype, index) => (\n                              <option key={index} value={target_mimetype}>\n                                {\n                                  supportedConversions[target_mimetype]\n                                    ?.extension\n                                }\n                              </option>\n                            )\n                          )}\n                        </select>\n                      </td>\n                      <td className=\"d-none d-sm-table-cell\">\n                        <span\n                          className={`badge badge-${\n                            conversionStatus[fileObject.status].badgeColor\n                          }`}\n                        >\n                          {fileObject.status}\n                        </span>\n                        {fileObject.status === \"processing\" && (\n                          <span\n                            className=\"spinner-border spinner-border-sm text-primary ml-2\"\n                            role=\"status\"\n                          >\n                            <span className=\"sr-only\">Loading...</span>\n                          </span>\n                        )}\n                      </td>\n                      <td className=\"text-center\">\n                        <div className=\"btn-group\">\n                          <button\n                            type=\"reset\"\n                            className=\"btn btn-sm btn-danger mr-1\"\n                            onClick={() => handleCancelConversion(index)}\n                          >\n                            <i className=\"fa fa-fw fa-times\"></i> Delete\n                          </button>\n                          {fileObject.fileDownloadUrl && (\n                            <a\n                              href={\n                                fileObject.fileDownloadUrl\n                                  ? fileObject.fileDownloadUrl\n                                  : \"#\"\n                              }\n                              className=\"btn btn-sm btn-success\"\n                              download={\n                                fileObject.convertedFileName\n                                  ? fileObject.convertedFileName\n                                  : \"\"\n                              }\n                            >\n                              <i className=\"fa fa-fw fa-download\"></i> Download\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"row block-content block-content-full block-content-sm bg-body-light\">\n              <div className=\"col text-left\">\n                <label htmlFor=\"upload-files\" className=\"btn btn-primary\">\n                  <i className=\"fa fa-plus mr-2\"></i> Add more files\n                </label>\n                <input\n                  type=\"file\"\n                  id=\"upload-files\"\n                  onChange={handleFileUpload}\n                  multiple\n                  required\n                  hidden\n                />\n              </div>\n              <div className=\"col text-right\">\n                <button\n                  type=\"reset\"\n                  className=\"btn btn-danger mr-1\"\n                  onClick={() => setConversionData([])}\n                >\n                  <i className=\"fa fa-repeat\"></i> Delete All\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={handleConversion}\n                >\n                  Convert All <i className=\"fa fa-arrow-right ml-1\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {conversionData.length === 0 && (\n          <div className=\"d-flex justify-content-center\">\n            <div id=\"upload-file-block\" className=\"block block-rounded\">\n              <div className=\"block-content\">\n                <div id=\"upload-file\" className=\"text-center\">\n                  <label\n                    htmlFor=\"id_original_file\"\n                    className=\"btn btn-hero-lg btn-hero-primary mb-3\"\n                  >\n                    <i className=\"fa fa-upload mr-1\" aria-hidden=\"true\"></i>\n                    Upload File\n                  </label>\n                  <input\n                    type=\"file\"\n                    multiple\n                    name=\"original_file\"\n                    required\n                    id=\"id_original_file\"\n                    onChange={handleFileUpload}\n                    hidden\n                  />\n                  <p>\n                    Upload your files here, 100MB maximum file size.\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-light\"\n                      onClick={() => {\n                        setSwalProps({\n                          show: true,\n                          text: \"All your data is always protected and under your control.\",\n                          icon: \"info\",\n                        });\n                      }}\n                    >\n                      <i className=\"fa fa-info-circle text-primary\"></i>\n                    </button>\n                    <SweetAlert2\n                      {...swalProps}\n                      didClose={() => {\n                        setSwalProps({});\n                      }}\n                    />\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      <Features />\n    </>\n  );\n}\n\nexport default FileConversion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}