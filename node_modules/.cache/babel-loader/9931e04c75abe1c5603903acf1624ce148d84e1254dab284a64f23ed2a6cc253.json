{"ast":null,"code":"var _jsxFileName = \"/Users/mahadasif/Desktop/file_bee/frontend/src/components/DocumentConversion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DocumentConversion() {\n  _s();\n  const [conversionData, setConversionData] = useState([]);\n  const [supportedConversions, setSupportedConversions] = useState({});\n  const conversionStatus = {\n    ready: {\n      badgeColor: 'info',\n      badgeText: 'ready'\n    },\n    processing: {\n      badgeColor: 'primary',\n      badgeText: 'processing'\n    },\n    completed: {\n      badgeColor: 'success',\n      badgeText: 'completed'\n    },\n    failed: {\n      badgeColor: 'danger',\n      badgeText: 'failed'\n    }\n  };\n  useEffect(() => {\n    // This code will run once when the component is mounted\n\n    const fetchSupportedMimetypes = async () => {\n      const url = 'http://localhost:8000/backend/target_conversions/';\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(data);\n        setSupportedConversions(data.supported_conversions);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    fetchSupportedMimetypes();\n  }, []);\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    const fileObjects = [...files].map(file => ({\n      file: file,\n      status: 'ready'\n    }));\n    setConversionData([...conversionData, ...fileObjects]);\n  };\n  const selectSupportedConversion = event => {\n    console.log('event: ', event);\n    const conversionIndex = event.target.id;\n    const selectedConversion = event.target.value;\n    const newConversionData = [...conversionData];\n    newConversionData[conversionIndex] = {\n      ...newConversionData[conversionIndex],\n      targetMimetype: selectedConversion\n    };\n    setConversionData(newConversionData);\n  };\n  const validateConversion = () => {\n    const supportedConversionDropdowns = document.querySelectorAll('.target-mimetypes');\n    let allDropdownsFilled = true;\n    supportedConversionDropdowns.forEach(element => {\n      if (element.value === '') {\n        allDropdownsFilled = false;\n        return; // Stop iterating if any dropdown is not filled\n      }\n    });\n    if (!allDropdownsFilled) {\n      alert('Please fill in all dropdowns before conversion.');\n    }\n    return allDropdownsFilled;\n  };\n  const handleConversionRequest = async (conversion, conversionIndex) => {\n    const url = 'http://localhost:8000/backend/';\n    const header = {\n      'X-CSRFTOKEN': getCookie('csrftoken')\n    };\n    const formData = new FormData();\n    formData.append('original_file', conversion.file);\n    formData.append('converted_mimetype', conversion.targetMimetype);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        header,\n        body: formData\n      });\n      if (!response.ok) {\n        return {};\n      }\n      const blob = await response.blob();\n      const contentType = response.headers.get('content-type');\n      const fileDownloadUrl = URL.createObjectURL(blob);\n      const convertedFileName = `converted_${conversionIndex}.${supportedConversions[contentType].extension}`;\n      return {\n        fileDownloadUrl: fileDownloadUrl,\n        convertedFileName: convertedFileName\n      };\n    } catch (error) {\n      console.error('Fetch error:', error);\n      return {};\n    }\n  };\n  const handleConversion = async () => {\n    const isValid = validateConversion();\n    if (!isValid) {\n      return;\n    }\n    const conversions = [...conversionData];\n    try {\n      await Promise.all(conversions.map(async (conversion, index) => {\n        if (conversion.fileDownloadUrl) {\n          return;\n        }\n        conversion = {\n          ...conversion,\n          status: 'processing'\n        };\n\n        // Use the functional state update form\n        setConversionData(prevConversions => {\n          const updatedConversions = [...prevConversions];\n          updatedConversions[index] = conversion;\n          return updatedConversions;\n        });\n        const {\n          fileDownloadUrl,\n          convertedFileName\n        } = await handleConversionRequest(conversion, index);\n        const updatedConversion = {\n          ...conversion,\n          fileDownloadUrl: fileDownloadUrl,\n          convertedFileName: convertedFileName,\n          status: fileDownloadUrl ? 'completed' : 'failed'\n        };\n\n        // Use the functional state update form\n        setConversionData(prevConversions => {\n          const updatedConversions = [...prevConversions];\n          updatedConversions[index] = updatedConversion;\n          return updatedConversions;\n        });\n      }));\n    } catch (error) {\n      console.error('Error in one or more requests:', error);\n    }\n  };\n  const handleCancelConversion = index => {\n    const newConversionData = [...conversionData];\n    newConversionData.splice(index, 1);\n    setConversionData(newConversionData);\n  };\n  const getCookie = name => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content content-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-sm-between text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-sm-fill font-size-h2 font-w400 text-center text-info\",\n          children: \"File Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Convert your files to any format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this), conversionData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-rounded block-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header block-header-default\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: \"Document Conversions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-options\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-options-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-vcenter\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Supported Conversions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"d-none d-sm-table-cell\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: conversionData.map((fileObject, index) => {\n              var _supportedConversions, _supportedConversions2;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  scope: \"row\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"font-w600\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-image mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 9\n                  }, this), fileObject.file.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-control target-mimetypes\",\n                    id: index,\n                    style: {\n                      width: \"70%\"\n                    },\n                    onChange: selectSupportedConversion,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      required: true,\n                      children: \"Convert to format ...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 9\n                    }, this), (_supportedConversions = supportedConversions[fileObject.file.type]) === null || _supportedConversions === void 0 ? void 0 : (_supportedConversions2 = _supportedConversions.targetable_mimetypes) === null || _supportedConversions2 === void 0 ? void 0 : _supportedConversions2.map((target_mimetype, index) => {\n                      var _supportedConversions3;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: target_mimetype,\n                        children: (_supportedConversions3 = supportedConversions[target_mimetype]) === null || _supportedConversions3 === void 0 ? void 0 : _supportedConversions3.extension\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 11\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"d-none d-sm-table-cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `badge badge-${conversionStatus[fileObject.status].badgeColor}`,\n                    children: fileObject.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 9\n                  }, this), fileObject.status === 'processing' && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"spinner-border spinner-border-sm text-primary ml-2\",\n                    role: \"status\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"sr-only\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"btn-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"reset\",\n                      className: \"btn btn-sm btn-danger mr-1\",\n                      onClick: () => handleCancelConversion(index),\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-fw fa-times\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 9\n                      }, this), \" Delete\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 9\n                    }, this), fileObject.fileDownloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: fileObject.fileDownloadUrl ? fileObject.fileDownloadUrl : '#',\n                      className: \"btn btn-sm btn-success\",\n                      download: fileObject.convertedFileName ? fileObject.convertedFileName : '',\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-fw fa-download\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 11\n                      }, this), \" Download\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 11\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 9\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row block-content block-content-full block-content-sm bg-body-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"upload-files\",\n            className: \"btn btn-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-plus mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 7\n            }, this), \" Add more files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"upload-files\",\n            onChange: handleFileUpload,\n            multiple: true,\n            required: true,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"btn btn-danger mr-1\",\n            onClick: () => setConversionData([]),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-repeat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 7\n            }, this), \" Delete All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: handleConversion,\n            children: [\"Convert All \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-arrow-right ml-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), conversionData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-rounded block-bordered\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"upload-file\",\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"id_original_file\",\n            className: \"btn btn-hero-primary mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-upload mr-1\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 7\n            }, this), \" Upload File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            name: \"original_file\",\n            required: true,\n            id: \"id_original_file\",\n            onChange: handleFileUpload,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload your files here, 100MB maximum file size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentConversion, \"qyqwWePwbeCiF7v94S2LcUmSH4k=\");\n_c = DocumentConversion;\nexport default DocumentConversion;\nvar _c;\n$RefreshReg$(_c, \"DocumentConversion\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DocumentConversion","_s","conversionData","setConversionData","supportedConversions","setSupportedConversions","conversionStatus","ready","badgeColor","badgeText","processing","completed","failed","fetchSupportedMimetypes","url","headers","response","fetch","method","ok","Error","status","data","json","console","log","supported_conversions","error","handleFileUpload","event","files","target","fileObjects","map","file","selectSupportedConversion","conversionIndex","id","selectedConversion","value","newConversionData","targetMimetype","validateConversion","supportedConversionDropdowns","document","querySelectorAll","allDropdownsFilled","forEach","element","alert","handleConversionRequest","conversion","header","getCookie","formData","FormData","append","body","blob","contentType","get","fileDownloadUrl","URL","createObjectURL","convertedFileName","extension","handleConversion","isValid","conversions","Promise","all","index","prevConversions","updatedConversions","updatedConversion","handleCancelConversion","splice","name","cookieValue","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fileObject","_supportedConversions","_supportedConversions2","scope","style","width","onChange","required","type","targetable_mimetypes","target_mimetype","_supportedConversions3","role","onClick","href","download","htmlFor","multiple","hidden","_c","$RefreshReg$"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/components/DocumentConversion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css'\n\nfunction DocumentConversion() {\n  const [conversionData, setConversionData] = useState([])\n  const [supportedConversions, setSupportedConversions] = useState({});\n  \n  const conversionStatus = {\n    ready: { badgeColor: 'info', badgeText: 'ready' },\n    processing: { badgeColor: 'primary', badgeText: 'processing' },\n    completed: { badgeColor: 'success', badgeText: 'completed' },\n    failed: { badgeColor: 'danger', badgeText: 'failed' }\n  }\n  \n  useEffect(() => {\n    // This code will run once when the component is mounted\n    \n    const fetchSupportedMimetypes = async () => {\n      const url = 'http://localhost:8000/backend/target_conversions/';\n      const headers = { 'Content-Type': 'application/json' };\n      \n      try {\n        const response = await fetch(url, { method: 'GET', headers });\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        console.log(data);\n        \n        setSupportedConversions(data.supported_conversions);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    };\n    \n    fetchSupportedMimetypes();\n    \n  }, []);\n  \n  const handleFileUpload = (event) => {\n    const files = event.target.files;\n    const fileObjects = [...files].map((file) => ({ file: file, status: 'ready' }));\n    setConversionData([...conversionData, ...fileObjects]);\n  };\n  \n  const selectSupportedConversion = (event) => {\n    console.log('event: ', event);\n    const conversionIndex = event.target.id;\n    const selectedConversion = event.target.value;\n    \n    const newConversionData = [...conversionData];\n    newConversionData[conversionIndex] = {\n      ...newConversionData[conversionIndex],\n      targetMimetype: selectedConversion\n    };\n    \n    setConversionData(newConversionData);\n  };\n  \n  const validateConversion = () => {\n    const supportedConversionDropdowns = document.querySelectorAll('.target-mimetypes');\n    let allDropdownsFilled = true;\n    \n    supportedConversionDropdowns.forEach(element => {\n      if (element.value === '') {\n        allDropdownsFilled = false;\n        return; // Stop iterating if any dropdown is not filled\n      }\n    });\n    \n    if (!allDropdownsFilled) {\n      alert('Please fill in all dropdowns before conversion.');\n    }\n    \n    return allDropdownsFilled;\n  };\n  \n  const handleConversionRequest = async (conversion, conversionIndex) => {\n    const url = 'http://localhost:8000/backend/';\n    const header = { 'X-CSRFTOKEN': getCookie('csrftoken') }\n    const formData = new FormData();\n    formData.append('original_file', conversion.file);\n    formData.append('converted_mimetype', conversion.targetMimetype);\n    \n    try {\n      const response = await fetch(url, { method: 'POST', header, body: formData });\n      \n      if (!response.ok) {\n        return {};\n      }\n      \n      const blob = await response.blob();\n      const contentType = response.headers.get('content-type');\n      const fileDownloadUrl = URL.createObjectURL(blob);\n      const convertedFileName = `converted_${conversionIndex}.${supportedConversions[contentType].extension}`;\n      \n      return { fileDownloadUrl: fileDownloadUrl, convertedFileName: convertedFileName };\n      \n    } catch (error) {\n      console.error('Fetch error:', error);\n      return {};\n    }\n  };\n  \n  const handleConversion = async () => {\n    \n    const isValid = validateConversion();\n    \n    if (!isValid) {\n      return;\n    }\n    \n    const conversions = [...conversionData];\n    \n    try {\n      await Promise.all(conversions.map(async (conversion, index) => {\n        if (conversion.fileDownloadUrl) {\n          return;\n        }\n        \n        conversion = {\n          ...conversion,\n          status: 'processing'\n        }\n        \n        // Use the functional state update form\n        setConversionData(prevConversions => {\n          const updatedConversions = [...prevConversions];\n          updatedConversions[index] = conversion;\n          return updatedConversions;\n        });\n        \n        const { fileDownloadUrl, convertedFileName } = await handleConversionRequest(conversion, index);\n        \n        const updatedConversion = {\n          ...conversion,\n          fileDownloadUrl: fileDownloadUrl,\n          convertedFileName: convertedFileName,\n          status: (fileDownloadUrl ? 'completed' : 'failed')\n        }\n        \n        // Use the functional state update form\n        setConversionData(prevConversions => {\n          const updatedConversions = [...prevConversions];\n          updatedConversions[index] = updatedConversion;\n          return updatedConversions;\n        });\n        \n      }));\n    } catch (error) {\n      console.error('Error in one or more requests:', error);\n    }\n  };\n  \n  const handleCancelConversion = (index) => {\n    const newConversionData = [...conversionData];\n    newConversionData.splice(index, 1);\n    setConversionData(newConversionData);\n  }\n  \n  const getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  \n  return (\n    <div className=\"content\">\n    <div className=\"content content-full\">\n    <div className=\"d-flex flex-column justify-content-sm-between text-center\">\n    <div className=\"flex-sm-fill font-size-h2 font-w400 text-center text-info\">File Converter</div>\n    <div>Convert your files to any format</div>\n    </div>\n    </div>\n    \n    {conversionData.length > 0 &&\n      <div className=\"block block-rounded block-bordered\">\n      <div className=\"block-header block-header-default\">\n      <h3 className=\"block-title\">Document Conversions</h3>\n      <div className=\"block-options\">\n      <div className=\"block-options-item\">\n      {/* <code>.table</code> */}\n      </div>\n      </div>\n      </div>\n      <div className=\"block-content\">\n      <table className=\"table table-vcenter\">\n      <thead>\n      <tr>\n      <th className=\"text-center\">#</th>\n      <th>Name</th>\n      <th>Supported Conversions</th>\n      <th className=\"d-none d-sm-table-cell\">Status</th>\n      <th className=\"text-center\">Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {conversionData.map((fileObject, index) => (\n        <tr key={index}>\n        <td className=\"text-center\" scope=\"row\">{index + 1}</td>\n        <td className=\"font-w600\">\n        <i className='fa fa-image mr-2'></i>\n        {fileObject.file.name}\n        </td>\n        <td>\n        <select className='form-control target-mimetypes' id={index} style={{ width: \"70%\" }} onChange={selectSupportedConversion}>\n        <option value=\"\" required>Convert to format ...</option>\n        {supportedConversions[fileObject.file.type]?.targetable_mimetypes?.map((target_mimetype, index) => (\n          <option key={index} value={target_mimetype}>{supportedConversions[target_mimetype]?.extension}</option>\n        ))}\n        </select>\n        </td>\n        <td className=\"d-none d-sm-table-cell\">\n        <span className={`badge badge-${conversionStatus[fileObject.status].badgeColor}`}>{fileObject.status}</span>\n        {fileObject.status === 'processing' &&\n          <span className=\"spinner-border spinner-border-sm text-primary ml-2\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n          </span>\n        }\n        </td>\n        <td className=\"text-center\">\n        <div className=\"btn-group\">\n        <button type=\"reset\" className=\"btn btn-sm btn-danger mr-1\" onClick={() => handleCancelConversion(index)}>\n        <i className=\"fa fa-fw fa-times\"></i> Delete\n        </button>\n        {fileObject.fileDownloadUrl &&\n          <a href={fileObject.fileDownloadUrl ? fileObject.fileDownloadUrl : '#'} className=\"btn btn-sm btn-success\" download={fileObject.convertedFileName ? fileObject.convertedFileName : ''}>\n          <i className=\"fa fa-fw fa-download\"></i> Download\n          </a>\n        }\n        </div>\n        </td>\n        </tr>\n      ))}\n      </tbody>\n      </table>\n      </div>\n      <div className=\"row block-content block-content-full block-content-sm bg-body-light\">\n      <div className='col text-left'>\n      <label htmlFor=\"upload-files\" className=\"btn btn-primary\">\n      <i className=\"fa fa-plus mr-2\"></i> Add more files\n      </label>\n      <input type=\"file\" id=\"upload-files\" onChange={handleFileUpload} multiple required hidden />\n      </div>\n      <div className='col text-right'>\n      <button type=\"reset\" className=\"btn btn-danger mr-1\" onClick={() => setConversionData([])}>\n      <i className=\"fa fa-repeat\"></i> Delete All\n      </button>\n      <button type=\"submit\" className=\"btn btn-primary\" onClick={handleConversion}>\n      Convert All <i className=\"fa fa-arrow-right ml-1\"></i>\n      </button>\n      </div>\n      </div>\n      </div>\n    }\n    \n    {conversionData.length === 0 &&\n      <div className=\"block block-rounded block-bordered\">\n      <div className=\"block-content\">\n      <div id=\"upload-file\" className=\"text-center\">\n      <label htmlFor=\"id_original_file\" className=\"btn btn-hero-primary mb-3\">\n      <i className=\"fa fa-upload mr-1\" aria-hidden=\"true\"></i> Upload File\n      </label>\n      <input type=\"file\" multiple name=\"original_file\" required id=\"id_original_file\" onChange={handleFileUpload} hidden />\n      <p>Upload your files here, 100MB maximum file size</p>\n      </div>\n      </div>\n      </div>\n    }\n    </div>\n  );\n}\n\nexport default DocumentConversion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}