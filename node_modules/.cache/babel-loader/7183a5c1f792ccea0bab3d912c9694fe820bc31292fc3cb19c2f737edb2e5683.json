{"ast":null,"code":"// api.js\nimport { getToken } from \"../contexts/AuthContext\"; // Assuming you have an auth module to get the token\n\nconst API_BASE_URL = \"http://localhost:8000\";\nclass ApiService {\n  constructor() {\n    this.baseUrl = API_BASE_URL;\n    this.token = null;\n  }\n  async fetchWithAuth(endpoint, options = {}) {\n    const token = getToken();\n    const headers = {\n      Authorization: `Token ${token.key}`,\n      ...options.headers\n    };\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      ...options,\n      headers\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || `HTTP error! Status: ${response.status}`);\n    }\n    return response;\n  }\n  async get(endpoint) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"GET\"\n    });\n  }\n  async post(endpoint, data) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  async delete(endpoint) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"DELETE\"\n    });\n  }\n  async postFormData(endpoint, formData) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      body: formData\n    });\n  }\n\n  // Specific API methods\n  async fetchSupportedMimetypes() {\n    const response = await this.get(\"/target_conversions/\");\n    return response.json();\n  }\n  async convertFile(file, targetMimetype) {\n    const formData = new FormData();\n    formData.append(\"original_file\", file);\n    formData.append(\"converted_mimetype\", targetMimetype);\n    return this.postFormData(\"/\", formData);\n  }\n  async updateUserProfile(userData) {\n    return this.put(\"/api/user/profile\", userData);\n  }\n  async deleteAccount() {\n    return this.delete(\"/api/user/delete_account\");\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["getToken","API_BASE_URL","ApiService","constructor","baseUrl","token","fetchWithAuth","endpoint","options","headers","Authorization","key","response","fetch","ok","error","json","Error","status","get","method","post","data","body","JSON","stringify","delete","postFormData","formData","fetchSupportedMimetypes","convertFile","file","targetMimetype","FormData","append","updateUserProfile","userData","put","deleteAccount","apiService"],"sources":["/Users/mahadasif/Desktop/file_bee/frontend/src/services/apiService.js"],"sourcesContent":["// api.js\nimport { getToken } from \"../contexts/AuthContext\"; // Assuming you have an auth module to get the token\n\nconst API_BASE_URL = \"http://localhost:8000\";\n\nclass ApiService {\n  constructor() {\n    this.baseUrl = API_BASE_URL;\n    this.token = null;\n  }\n\n  async fetchWithAuth(endpoint, options = {}) {\n    const token = getToken();\n    const headers = {\n      Authorization: `Token ${token.key}`,\n      ...options.headers,\n    };\n\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      ...options,\n      headers,\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || `HTTP error! Status: ${response.status}`);\n    }\n\n    return response;\n  }\n\n  async get(endpoint) {\n    return this.fetchWithAuth(endpoint, { method: \"GET\" });\n  }\n\n  async post(endpoint, data) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n\n  async delete(endpoint) {\n    return this.fetchWithAuth(endpoint, { method: \"DELETE\" });\n  }\n\n  async postFormData(endpoint, formData) {\n    return this.fetchWithAuth(endpoint, {\n      method: \"POST\",\n      body: formData,\n    });\n  }\n\n  // Specific API methods\n  async fetchSupportedMimetypes() {\n    const response = await this.get(\"/target_conversions/\");\n    return response.json();\n  }\n\n  async convertFile(file, targetMimetype) {\n    const formData = new FormData();\n    formData.append(\"original_file\", file);\n    formData.append(\"converted_mimetype\", targetMimetype);\n    return this.postFormData(\"/\", formData);\n  }\n\n  async updateUserProfile(userData) {\n    return this.put(\"/api/user/profile\", userData);\n  }\n\n  async deleteAccount() {\n    return this.delete(\"/api/user/delete_account\");\n  }\n}\n\nexport const apiService = new ApiService();\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,yBAAyB,CAAC,CAAC;;AAEpD,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAGH,YAAY;IAC3B,IAAI,CAACI,KAAK,GAAG,IAAI;EACnB;EAEA,MAAMC,aAAaA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1C,MAAMH,KAAK,GAAGL,QAAQ,CAAC,CAAC;IACxB,MAAMS,OAAO,GAAG;MACdC,aAAa,EAAG,SAAQL,KAAK,CAACM,GAAI,EAAC;MACnC,GAAGH,OAAO,CAACC;IACb,CAAC;IAED,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,IAAI,CAACT,OAAQ,GAAEG,QAAS,EAAC,EAAE;MACzD,GAAGC,OAAO;MACVC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAK,uBAAsBH,QAAQ,CAACM,MAAO,EAAC,CAAC;IAC1E;IAEA,OAAON,QAAQ;EACjB;EAEA,MAAMO,GAAGA,CAACZ,QAAQ,EAAE;IAClB,OAAO,IAAI,CAACD,aAAa,CAACC,QAAQ,EAAE;MAAEa,MAAM,EAAE;IAAM,CAAC,CAAC;EACxD;EAEA,MAAMC,IAAIA,CAACd,QAAQ,EAAEe,IAAI,EAAE;IACzB,OAAO,IAAI,CAAChB,aAAa,CAACC,QAAQ,EAAE;MAClCa,MAAM,EAAE,MAAM;MACdX,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEA,MAAMI,MAAMA,CAACnB,QAAQ,EAAE;IACrB,OAAO,IAAI,CAACD,aAAa,CAACC,QAAQ,EAAE;MAAEa,MAAM,EAAE;IAAS,CAAC,CAAC;EAC3D;EAEA,MAAMO,YAAYA,CAACpB,QAAQ,EAAEqB,QAAQ,EAAE;IACrC,OAAO,IAAI,CAACtB,aAAa,CAACC,QAAQ,EAAE;MAClCa,MAAM,EAAE,MAAM;MACdG,IAAI,EAAEK;IACR,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMC,uBAAuBA,CAAA,EAAG;IAC9B,MAAMjB,QAAQ,GAAG,MAAM,IAAI,CAACO,GAAG,CAAC,sBAAsB,CAAC;IACvD,OAAOP,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB;EAEA,MAAMc,WAAWA,CAACC,IAAI,EAAEC,cAAc,EAAE;IACtC,MAAMJ,QAAQ,GAAG,IAAIK,QAAQ,CAAC,CAAC;IAC/BL,QAAQ,CAACM,MAAM,CAAC,eAAe,EAAEH,IAAI,CAAC;IACtCH,QAAQ,CAACM,MAAM,CAAC,oBAAoB,EAAEF,cAAc,CAAC;IACrD,OAAO,IAAI,CAACL,YAAY,CAAC,GAAG,EAAEC,QAAQ,CAAC;EACzC;EAEA,MAAMO,iBAAiBA,CAACC,QAAQ,EAAE;IAChC,OAAO,IAAI,CAACC,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAAC;EAChD;EAEA,MAAME,aAAaA,CAAA,EAAG;IACpB,OAAO,IAAI,CAACZ,MAAM,CAAC,0BAA0B,CAAC;EAChD;AACF;AAEA,OAAO,MAAMa,UAAU,GAAG,IAAIrC,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}